{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/services/OverlayService.tsx","webpack:///./src/models/Player.tsx","webpack:///./src/services/SchemasService.tsx","webpack:///./src/index.tsx","webpack:///./src/components/App/App.tsx","webpack:///./src/models/Encounter.tsx","webpack:///./src/enums/EncounterSort.tsx","webpack:///./src/services/EncounterService.tsx","webpack:///./src/components/PlayerElement/PlayerElement.tsx","webpack:///./src/components/Navbar/Navbar.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","OverlayService","this","getAPI","Error","registerListeners","OverlayPluginApi","encounter","encData","Encounter","duration","plys","combData","keys","forEach","id","plyData","job","ply","Player","SchemasService","getJobFromScheme","toUpperCase","updateData","dps","damage_perc","damage_total","damage_blocked","damage_blocked_perc","deaths","max_heal_perc","max_heal","hps","threat","threat_delta","document","addEventListener","$event","detail","type","onOverlayCombatUpdate","emit","parseCombatData","onOverlayDataUpdate","overlayState","locked","isLocked","onOverlayState","console","debug","code","opcode","onOverlayLogLine","timestamp","payload","onOverlayEcho","message","text","Hook","profile","toString","percent","schema","default_schema","schemaData","color","ReactDOM","render","App","getElementById","React","Component","props","super","state","isLoaded","initialize","EncounterService","setState","onDestroy","Navbar","className","PlayerElement","index","player","fakePlayer","renderApp","currentSortMode","EncounterSort","SORT_BY_DPS","players","sortPlayers","sortMode","sort","a","b","getDPS","SORT_BY_TOTAL_DAMAGE","getTotalDamage","SORT_BY_DEFENSE","SORT_BY_HEAL","currentEncounter","bindObservables","unbindObservables","add","parseData","setPlayers","onEncounterUpdate","destroy","user","src","getIcon","getName"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([6,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Hook } from '@edunad/hooks';\nimport { OverlayState } from '../interfaces/Overlay/OverlayState';\nimport { OverlayLog } from '../interfaces/Overlay/OverlayLog';\nimport { Player } from '../models/Player';\nimport { Encounter } from '../models/Encounter';\nimport { SchemasService } from './SchemasService';\n\n\nconst DEBUG_SERVICE: boolean = true;\n\nexport class OverlayService {\n    public static overlayState: OverlayState;\n\n    public static onOverlayState: Hook<OverlayState> = new Hook<OverlayState>();\n    public static onOverlayEcho: Hook<string> = new Hook<string>();\n    public static onOverlayLogLine: Hook<OverlayLog> = new Hook<OverlayLog>();\n\n    public static onOverlayDataUpdate: Hook<any> = new Hook<any>();\n    public static onOverlayCombatUpdate: Hook<[Encounter, Player[]]> = new Hook<[Encounter, Player[]]>();\n\n    public static initialize(): void {\n        if(this.getAPI() == null) throw new Error('[OverlayService] Failed to find OverlayPlugin API');\n        this.registerListeners();\n    }\n\n    public static getAPI(): any {\n        return (window as any).OverlayPluginApi;\n    }\n\n    private static parseCombatData(data: any): [Encounter, Player[]] {\n        if(data == null) return;\n\n        let encounter: Encounter = null;\n        let encData: any = data['Encounter'];\n\n        if(encData != null) {\n            encounter = new Encounter({\n                name: encData['CurrentZoneName'],\n                duration: encData['duration']\n            });\n        }\n\n        let plys: Player[] = [];\n        let combData: any = data['Combatant'];\n\n        if(combData != null) {\n            Object.keys(combData).forEach((id: string) => {\n                let plyData: any = combData[id];\n                if(plyData == null) return;\n\n                let job: string = plyData['Job'];\n                if(job == null) return;\n\n                let ply: Player = new Player({\n                    name: id,\n                    job: SchemasService.getJobFromScheme(job.toUpperCase())\n                });\n\n                //console.debug(plyData['BlockPct']);\n                ply.updateData({\n                    dps: plyData['dps'],\n                    damage_perc: plyData['damage%'],\n                    damage_total: plyData['damage'],\n\n                    damage_blocked: plyData['damageShield'], // TODO: Verify\n                    damage_blocked_perc: plyData['BlockPct'], // TODO: Verify\n\n                    deaths: plyData['deaths'],\n\n                    max_heal_perc: plyData['healed%'],\n                    max_heal: plyData['healed'],\n                    hps: plyData['ENCHPS'],\n\n                    threat: plyData['threatstr'],\n                    threat_delta:plyData['threatdelta'],\n                });\n\n                plys.push(ply);\n            });\n        }\n\n        return [encounter, plys];\n    }\n\n    public static registerListeners(): void {\n        // Overlay state when AREA / Combatent changes\n        document.addEventListener('onOverlayDataUpdate', ($event: any) => {\n            if($event == null) return;\n\n            let data: any = $event.detail;\n            if(data == null) return;\n\n            if(data.type == 'CombatData') {\n                this.onOverlayCombatUpdate.emit(this.parseCombatData(data));\n            }else {\n                this.onOverlayDataUpdate.emit(data);\n            }\n        });\n\n        // Overlay state update (if window is locked or not)\n        document.addEventListener('onOverlayStateUpdate', ($event: any) => {\n            if($event == null || $event.detail == null) return;\n            this.overlayState = {\n                locked: $event.detail.isLocked\n            };\n\n            this.onOverlayState.emit(this.overlayState);\n        });\n\n        document.addEventListener('onBroadcastMessageReceive', ($event: any) => {\n            if($event == null) return;\n            console.debug('onBroadcastMessageReceive', $event);\n        });\n\n        document.addEventListener('onRecvMessage', ($event: any) => {\n            if($event == null) return;\n            console.debug('onRecvMessage', $event);\n        });\n\n        document.addEventListener('onLogLine', ($event: any) => {\n            if($event == null) return;\n\n            let detail: any = $event.detail;\n            if(detail == null) return;\n\n            let code: number = detail.opcode;\n            if(code != null) {\n                if(code !== 56) {\n                    this.onOverlayLogLine.emit({type: code, timestamp: detail.timestamp, payload: detail.payload});\n                } else {\n                    this.onOverlayEcho.emit(detail.payload[3]);\n                }\n            } else {\n                this.onOverlayEcho.emit(detail.message);\n            }\n        });\n    }\n\n    /**\n     * Print a debug message of the service if enabled\n     *\n     * @param {string} text - the debug message\n     * @returns {void}\n     */\n    private static onDebug(text: string): void {\n        if (!DEBUG_SERVICE) return;\n        console.debug(`[OverlayService] ${text}`);\n    }\n}","import { PlayerData } from '../interfaces/Player/PlayerData';\nimport { PlayerProfile } from '../interfaces/Player/PlayerProfile';\nimport { PlayerJob } from '../interfaces/Player/PlayerJob';\n\nexport class Player {\n    private profile: PlayerProfile;\n    private data: PlayerData;\n\n    constructor(profile: PlayerProfile) {\n        this.profile = profile;\n    }\n\n    public isLocalPlayer(): boolean {\n       return this.profile.name === 'YOU';\n    }\n\n    public updateData(data: PlayerData): void {\n        this.data = data;\n    }\n\n    public getName(): string {\n        return this.profile.name;\n    }\n\n    public getJob(): PlayerJob {\n        return this.profile.job;\n    }\n\n    public getDPS(): number {\n        if(this.data.dps.toString() === '∞') return 0;\n        return this.data.dps;\n    }\n\n    public getTotalDamage(percent: boolean = false): any {\n        return percent ? this.data.damage_perc : this.data.damage_total;\n    }\n\n    public getHPS(): number {\n        return this.data.hps;\n    }\n\n    public getIcon(): string {\n        return `./assets/icons/${this.profile.job.id}.png`;\n    }\n}","import { PlayerJob } from '../interfaces/Player/PlayerJob';\nimport * as default_schema from '../settings/color_schemas/default.json';\n\nexport class SchemasService {\n    public static schema: any;\n    public static initialize(): void {\n        this.schema = default_schema;\n    }\n\n    public static getJobFromScheme(id: string): PlayerJob {\n        let schemaData: any = this.schema[id];\n        if(schemaData == null) schemaData = this.schema['DEFAULT'];\n\n        return {\n            color: schemaData.color,\n            id: id,\n            name: schemaData.name\n        }\n    }\n}","'use strict';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { App } from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('app-container'));","'use strict';\n\nimport * as React from 'react';\nimport { OverlayService } from '../../services/OverlayService';\nimport { EncounterService } from '../../services/EncounterService';\nimport { SchemasService } from '../../services/SchemasService';\nimport { PlayerElement } from '../PlayerElement/PlayerElement';\nimport { Player } from '../../models/Player';\nimport { Navbar } from '../Navbar/Navbar';\n\n/**\n * The AppState interface\n * @interface\n */\ninterface AppState {\n    isLoaded: boolean;\n}\n\n/**\n * App component\n * @class\n */\nexport class App extends React.Component<any, AppState>  {\n    /**\n     * Initializes the App class\n     * @param {any} props\n     *\n     * @constructor\n     */\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            isLoaded: false\n        };\n    }\n\n    /**\n     * Called on component mounted\n     *\n     * @returns {void}\n     */\n    public componentDidMount(): void {\n        OverlayService.initialize();\n        SchemasService.initialize();\n        EncounterService.initialize();\n\n        this.setState({isLoaded: true});\n    }\n\n    /**\n     * Called on component unmout\n     *\n     * @returns {void}\n     */\n    public componentWillUnmount(): void {\n        EncounterService.onDestroy();\n    }\n\n    public fakePlayer(): Player {\n        let ply: Player = new Player({\n            job: SchemasService.getJobFromScheme('ARC'),\n            name: 'Bromvlieg'\n        });\n\n        ply.updateData({\n            damage_blocked: 100,\n            dps: 342,\n            damage_blocked_perc: '50%',\n            damage_perc: '100%',\n            damage_total: 10000,\n            deaths: 0,\n            hps: 0,\n            max_heal: 1000,\n            max_heal_perc: '100%',\n            threat: '0',\n            threat_delta: 0\n        });\n\n        return ply;\n    }\n\n    public renderApp(): any {\n        if(!this.state.isLoaded) return;\n        return (\n            <>\n                <Navbar/>\n                <div className='player-list'>\n                    <PlayerElement index={1} player={this.fakePlayer()} />\n                </div>\n            </>\n        );\n    }\n\n    /**\n     * React render method\n     *\n     * @returns {any}\n     */\n    public render(): any {\n        return (\n            <div className='app-container' >\n                {this.renderApp()}\n            </div>\n        );\n    }\n}","import { EncounterData } from '../interfaces/Encounter/EncounterData';\nimport { Player } from './Player';\nimport { EncounterSort } from '../enums/EncounterSort';\n\nexport class Encounter {\n    private data: EncounterData;\n    private players: Player[];\n    private currentSortMode: EncounterSort = EncounterSort.SORT_BY_DPS; // TODO: Move this to settings or whatever\n\n    constructor(data: EncounterData) {\n        this.data = data;\n        this.players = [];\n    }\n\n    public getID(): string{\n        return this.data.name;\n    }\n\n    public updateTime(duration: string): void {\n        this.data.duration = duration;\n    }\n\n    public getTime(): string {\n        return this.data.duration;\n    }\n\n    public removePlayer(id: string): void {\n        delete this.players[id];\n    }\n\n    public setPlayers(plys: Player[]): void {\n        this.players = plys;\n        this.sortPlayers(this.currentSortMode)\n    }\n\n    public sortPlayers(sortMode: EncounterSort): void {\n        switch(sortMode) {\n            case EncounterSort.SORT_BY_DPS:\n                this.players.sort((a: Player, b: Player) => a.getDPS() > b.getDPS() ? 1 : -1);\n                break;\n            case EncounterSort.SORT_BY_TOTAL_DAMAGE:\n                this.players.sort((a: Player, b: Player) => a.getTotalDamage() > b.getTotalDamage() ? 1 : -1);\n                break;\n            case EncounterSort.SORT_BY_DEFENSE:\n                break;\n            case EncounterSort.SORT_BY_HEAL:\n                break;\n        }\n    }\n}","export enum EncounterSort {\n    SORT_BY_DPS = 0,\n    SORT_BY_TOTAL_DAMAGE = 1,\n    SORT_BY_HEAL = 2,\n    SORT_BY_DEFENSE = 3\n}","import { HookSubscription, Hook } from '@edunad/hooks';\n\nimport { OverlayService } from './OverlayService';\nimport { Encounter } from '../models/Encounter';\nimport { Player } from '../models/Player';\n\nexport class EncounterService {\n    public static onEncounterUpdate: Hook<Encounter> = new Hook<Encounter>();\n\n    private static onOverlayCombatUpdate: HookSubscription;\n    private static currentEncounter: Encounter;\n\n    public static initialize(): void {\n        this.currentEncounter = null;\n        this.bindObservables();\n    }\n\n    public static onDestroy(): void {\n        this.unbindObservables();\n    }\n\n    private static bindObservables(): void {\n        this.onOverlayCombatUpdate = OverlayService.onOverlayCombatUpdate.add('overlayReader', (data: [Encounter, Player[]]) => {\n            this.parseData(data);\n        });\n    }\n\n    private static parseData(data: [Encounter, Player[]]): void {\n        if(data == null) return;\n\n        let encounter: Encounter = data[0];\n        if(encounter == null) return;\n\n        encounter.setPlayers(data[1]);\n        this.currentEncounter = encounter;\n        this.onEncounterUpdate.emit(this.currentEncounter);\n    }\n\n    private static unbindObservables(): void {\n        this.onOverlayCombatUpdate.destroy();\n    }\n}","'use strict';\n\nimport * as React from 'react';\n\nimport { Player } from '../../models/Player';\n\n\ninterface PlayerProps {\n    index: number;\n    player: Player;\n}\n\n/**\n * UserPanel component\n * @class\n */\nexport class PlayerElement extends React.Component<PlayerProps> {\n    constructor(props: PlayerProps) {\n        super(props);\n    }\n\n    /**\n     * React render method\n     *\n     * @returns {any}\n     */\n    public render(): any {\n        let user: Player = this.props.player;\n\n        return(\n            <div className='player-container'>\n                <img className='player-icon' src={user.getIcon()}/>\n                <div className='player-info-container'>\n                    <div className='player-info'>{this.props.index}. {user.getName()}</div>\n                    <div className='player-numbers'>{user.getTotalDamage()} ({user.getTotalDamage()}, {user.getTotalDamage(true)})</div>\n                </div>\n            </div>\n        );\n    }\n}","'use strict';\n\nimport * as React from 'react';\n\n/**\n * UserPanel component\n * @class\n */\nexport class Navbar extends React.Component<any> {\n    constructor(props: any) {\n        super(props);\n    }\n\n    /**\n     * React render method\n     *\n     * @returns {any}\n     */\n    public render(): any {\n        return(\n            <div className='navbar-container'>\n                Damage: Current fight\n            </div>\n        );\n    }\n}"],"sourceRoot":""}